services:
  app:
    build: .
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
    networks:
      - my_network
    # Enable JSON logging for better parsing
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  cron:
    build:
      context: ./configs/cron
    volumes:
      - ./logs/cloudfront:/logs/cloudfront
    depends_on:
      - app
    networks:
      - my_network
    environment:
      - AWS_REGION=us-east-1
  
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    volumes:
      - ./configs/loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/tmp/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - my_network

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/log:/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/promtail-config.yml:/etc/promtail/config.yml
      - ./logs/cloudfront:/logs/cloudfront:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - my_network
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3001:3000"
    networks:
      - my_network
    depends_on:
      - loki
    volumes:
      - ./configs/grafana-provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false

networks:
  my_network:
    name: my_network
    driver: bridge

volumes:
  loki-data:
  grafana-data: