services:
  app:
    build: .
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
    networks:
      - my_network
    # Enable JSON logging for better parsing
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  aws-role-check:
    image: amazon/aws-cli:latest
    command: 
      - /bin/sh
      - -c
      - |
        echo "=== Debugging AWS CLI Container ==="
        echo "Container started successfully"
        echo "Current user: $(whoami)"
        echo "Environment variables:"
        env | grep AWS || echo "No AWS env vars set"
        echo ""
        echo "=== Testing Instance Metadata Service ==="
        echo "Testing metadata service connectivity..."
        curl -s --connect-timeout 5 http://169.254.169.254/latest/meta-data/instance-id && echo " - Instance ID retrieved" || echo "FAILED: Cannot reach metadata service"
        echo ""
        echo "Testing IAM role availability..."
        curl -s --connect-timeout 5 http://169.254.169.254/latest/meta-data/iam/security-credentials/ && echo " - IAM roles found" || echo "FAILED: No IAM roles attached to instance"
        echo ""
        echo "=== Testing AWS CLI Configuration ==="
        echo "AWS CLI version:"
        aws --version
        echo "AWS CLI configuration:"
        aws configure list
        echo ""
        echo "=== AWS Identity Information ==="
        aws sts get-caller-identity 2>&1 || echo "FAILED: Cannot get caller identity - likely no IAM role attached"
        echo ""
        echo "=== Testing Basic AWS API Access ==="
        echo "Testing EC2 describe-regions (minimal permissions required):"
        aws ec2 describe-regions --region us-east-1 --query 'Regions[0].RegionName' --output text 2>&1 || echo "FAILED: Cannot access AWS APIs"
        echo ""
        echo "=== Testing S3 Access ==="
        aws s3 ls 2>&1 || echo "FAILED: S3 access denied or no buckets"
        echo ""
        echo "=== Summary ==="
        echo "If you see FAILED messages above, your EC2 instance likely needs:"
        echo "1. An IAM role attached to the instance"
        echo "2. The IAM role should have appropriate permissions"
        echo "3. The metadata service should be accessible (IMDSv1 or IMDSv2)"
        echo "Container test completed."
    network_mode: host
    environment:
      - AWS_DEFAULT_REGION=us-east-1
  
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./configs/loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/tmp/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - my_network

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/promtail-config.yml:/etc/promtail/config.yml
      - ./logs/cloudfront:/logs/cloudfront:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - my_network
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    networks:
      - my_network
    depends_on:
      - loki
    volumes:
      - ./configs/grafana-provisioning/:/etc/grafana/provisioning/
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false

networks:
  my_network:
    name: my_network
    driver: bridge

volumes:
  loki-data:
  grafana-data: