services:
  app:
    build: .
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
    networks:
      - my_network
    # Enable JSON logging for better parsing
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  aws-role-check:
    image: amazon/aws-cli:latest
    command: >
      sh -c "
        echo '=== AWS Identity Information ===' &&
        aws sts get-caller-identity &&
        echo '' &&
        echo '=== Instance Metadata Role ===' &&
        aws sts get-caller-identity --query 'Arn' --output text &&
        echo '' &&
        echo '=== Available AWS Regions ===' &&
        aws ec2 describe-regions --query 'Regions[].RegionName' --output table &&
        echo '' &&
        echo '=== Testing S3 Access ===' &&
        aws s3 ls || echo 'S3 access denied or no buckets' &&
        echo '' &&
        echo '=== IAM Role Policies (if accessible) ===' &&
        ROLE_NAME=$$(aws sts get-caller-identity --query 'Arn' --output text | cut -d'/' -f2) &&
        aws iam list-attached-role-policies --role-name $$ROLE_NAME 2>/dev/null || echo 'Cannot list role policies (insufficient permissions)' &&
        echo '' &&
        echo '=== EC2 Instance Metadata ===' &&
        curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/ || echo 'Cannot access instance metadata'
      "
    network_mode: host
    environment:
      - AWS_DEFAULT_REGION=us-east-1
  
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./configs/loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/tmp/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - my_network

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/promtail-config.yml:/etc/promtail/config.yml
      - ./logs/cloudfront:/logs/cloudfront:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - my_network
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    networks:
      - my_network
    depends_on:
      - loki
    volumes:
      - ./configs/grafana-provisioning/:/etc/grafana/provisioning/
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false

networks:
  my_network:
    name: my_network
    driver: bridge

volumes:
  loki-data:
  grafana-data: