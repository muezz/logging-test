server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs (including your app)
  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          __path__: /var/log/containers/*.log
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            time: time
      - timestamp:
          source: time
          format: RFC3339Nano
      - output:
          source: output
  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\w+)\s+(?P<service>\w+):\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: Jan 2 15:04:05
      - labels:
          hostname:
          service:

  # CloudFront logs (assuming they're in a specific directory)
  - job_name: cloudfront
    static_configs:
      - targets:
          - localhost
        labels:
          job: cloudfront
          log_type: access
          __path__: /logs/cloudfront/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<date>\d{4}-\d{2}-\d{2})\s+(?P<time>\d{2}:\d{2}:\d{2})\s+(?P<edge_location>\w+-\w+\d+)\s+(?P<bytes>\d+)\s+(?P<client_ip>[\d\.]+)\s+(?P<method>\w+)\s+(?P<host>[^\s]+)\s+(?P<uri>[^\s]+)\s+(?P<status>\d+)\s+(?P<referrer>[^\s]+)\s+(?P<user_agent>[^\s]+)\s+(?P<query_string>[^\s]+)\s+(?P<cookie>[^\s]+)\s+(?P<edge_result_type>\w+)\s+(?P<edge_request_id>[^\s]+)\s+(?P<host_header>[^\s]+)\s+(?P<protocol>\w+)\s+(?P<bytes_sent>\d+)\s+(?P<time_taken>[\d\.]+)\s+(?P<forwarded_for>[^\s]+)\s+(?P<ssl_protocol>[^\s]+)\s+(?P<ssl_cipher>[^\s]+)\s+(?P<edge_response_result_type>\w+)\s+(?P<protocol_version>[^\s]+)\s+(?P<fle_status>[^\s]+)\s+(?P<fle_encrypted_fields>[^\s]+)\s+(?P<port>\d+)\s+(?P<time_to_first_byte>[\d\.]+)\s+(?P<detail_level>[^\s]+)\s+(?P<content_type>[^\s]+)\s+(?P<content_length>[^\s]+)\s+(?P<range_start>[^\s]+)\s+(?P<range_end>[^\s]+)'
      - timestamp:
          source: date
          format: '2006-01-02'
          action_on_failure: skip
      - labels:
          method:
          status:
          edge_location:
          log_type: "cloudfront"
      - template:
          source: formatted_message
          template: '{{ .method }} {{ .uri }} [{{ .status }}] {{ .bytes }} bytes {{ .time_taken }}ms'

  # Application logs from Docker stdout/stderr
  - job_name: app_logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: [__meta_docker_container_name]
        target_label: container_name
      - source_labels: [__meta_docker_container_log_stream]
        target_label: stream
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            time: time
      - timestamp:
          source: time
          format: RFC3339Nano
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z)?\s*(?P<level>\w+)?\s*(?P<message>.*)$'
      - labels:
          level:
          container_name:
          stream:
      - template:
          source: formatted_message
          template: '{{ .message }}'